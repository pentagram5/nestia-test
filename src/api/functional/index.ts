/**
 * @packageDocumentation
 * @module api.functional
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IPage, IBbsArticle } from "../../interface/app.interface";

export * as bbs from "./bbs";

/**
 * @controller TypedBodyController.test
 * @path GET /test
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function test(connection: IConnection): Promise<test.Output> {
  return PlainFetcher.fetch(connection, {
    ...test.METADATA,
    template: test.METADATA.path,
    path: test.path(),
  });
}
export namespace test {
  export type Output = Primitive<IPage<IBbsArticle.ISummary>>;

  export const METADATA = {
    method: "GET",
    path: "/test",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/test";
}
